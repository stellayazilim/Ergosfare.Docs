---
title: Event OluÅŸturma
description: Ergosfareâ€™de event tanÄ±mlamayÄ± Ã¶ÄŸrenin.
---

## Event Nedir?

Ergosfareâ€™de Eventâ€™ler, **bir ÅŸeyin gerÃ§ekleÅŸtiÄŸini bildiren bildirimlerdir**.  
Bir event, `Ergosfare.Contracts` iÃ§indeki **`IEvent` arayÃ¼zÃ¼nÃ¼ implemente eden herhangi bir tiptir**.

> âš¡ Event tanÄ±mlamak iÃ§in Event Moduleâ€™e ihtiyacÄ±nÄ±z yoktur. Sadece `Ergosfare.Contracts` eklemeniz yeterlidir.  
> âš¡ Bir nesne **`IEvent` arayÃ¼zÃ¼nÃ¼ implement ederse**, otomatik olarak **event olarak iÅŸlenir** ve `IEventMediator` Ã¼zerinden publish edilebilir.  
> âš¡ Ancak, **eventâ€™ler POCO (C#) veya POJO (Java) sÄ±nÄ±flarÄ± olarak da tanÄ±mlanabilir**. Bu sayede domain katmanÄ±nda **Ergosfare baÄŸÄ±mlÄ±lÄ±ÄŸÄ± gerekmez** ve domain model saf kalÄ±r.

---

### Ã–nemli Noktalar

{% prose %}
* Eventâ€™ler, sistem veya aboneleri **bir durum deÄŸiÅŸikliÄŸinden veya Ã¶nemli bir olaydan haberdar etmek** iÃ§in kullanÄ±lÄ±r.  
* Command ve Queryâ€™lerden farklÄ± olarak, eventâ€™lerin birden fazla handlerâ€™Ä± olabilir.  
* Eventâ€™ler **class, record veya struct** olarak tanÄ±mlanabilir.  
* Eventâ€™ler, abonelerin tepki vermesi iÃ§in gerekli tÃ¼m bilgileri taÅŸÄ±r.  
* Eventâ€™ler **hafif** olmalÄ± ve iÅŸ mantÄ±ÄŸÄ± iÃ§ermemelidir.  
* Eventâ€™ler genellikle **immutable**â€™dÄ±r; ancak pre-handlerâ€™lar gerekli baÄŸlamÄ± eklemek iÃ§in mutable yapabilir.  
* **Single Responsibility:** Her event tek bir, baÄŸÄ±msÄ±z olayÄ± temsil eder.  
* Ergosfareâ€™de eventâ€™ler **fire-and-forget** ÅŸeklindedir; sonuÃ§ dÃ¶ndÃ¼rmezler.  
{% /prose %}

---

## Event Ã–rneÄŸi

```csharp
using Ergosfare.Contracts;

public record OrderCreatedEvent(Guid OrderId, string CustomerId) : IEvent;
```

### Eventâ€™ler VarsayÄ±lan Olarak Immutableâ€™dÄ±r

Eventâ€™ler tasarÄ±m gereÄŸi **immutable**â€™dÄ±r. Bu, event verisinin oluÅŸturulmasÄ±ndan handlerâ€™a ulaÅŸana kadar tutarlÄ± kalmasÄ±nÄ± saÄŸlar.
Gerekirse eventâ€™ler **pre-handlerâ€™lar aracÄ±lÄ±ÄŸÄ±yla** handlerâ€™lara ulaÅŸmadan Ã¶nce deÄŸiÅŸtirilebilir (Ã¶rneÄŸin tenant, kullanÄ±cÄ± veya ortam baÄŸlamÄ± eklemek iÃ§in).

---

### Mutable vs. Immutable Eventâ€™ler

#### Immutable Event

```csharp
using Ergosfare.Contracts;

public record ProductStockUpdatedEvent(string ProductId, int Quantity) : IEvent;
```

#### Mutable Event

```csharp
using Ergosfare.Contracts;

public record ProductStockUpdatedEvent(string productId, int quantity) : IEvent
{
    public string ProductId { get; set; } = productId;
    public int Quantity { get; set; } = quantity;
}
```

#### Mutable Event NotlarÄ±

{% prose %}

* Mutable eventâ€™ler **reference type** olmalÄ±dÄ±r.
* Mutasyon yalnÄ±zca **handler Ã§alÄ±ÅŸmadan Ã¶nce**, genellikle pre-handler iÃ§inde yapÄ±lmalÄ±dÄ±r.
* Immutable yapÄ±, reasoning, test ve tutarlÄ±lÄ±k iÃ§in tercih edilmelidir.
{% /prose %}

---

## Sonraki AdÄ±mlar

{% cardgrid %}

{% linkcard title="Event Handler TanÄ±mlama" href="./event-handler" /%}
{% linkcard title="Event YayÄ±nlama (IEventMediator)" href="" /%}

{% /cardgrid %}

---

## ğŸ“– SÃ¶zlÃ¼k

| Terim           | AÃ§Ä±klama                                                                               |
| --------------- | -------------------------------------------------------------------------------------- |
| Event           | Sistem veya aboneleri bilgilendiren mesaj / bildirim.                                  |
| Handler         | Eventâ€™in iÅŸ mantÄ±ÄŸÄ±nÄ± yÃ¼rÃ¼ten sÄ±nÄ±f.                                                   |
| Pre-handler     | Event, handlerâ€™a ulaÅŸmadan Ã¶nce Ã§alÄ±ÅŸan ve onu deÄŸiÅŸtirebilen bileÅŸen.                 |
| Immutable       | OluÅŸturulduktan sonra deÄŸiÅŸtirilemeyen nesne.                                          |
| Mutable         | YaÅŸam dÃ¶ngÃ¼sÃ¼ sÄ±rasÄ±nda deÄŸiÅŸtirilebilen nesne.                                        |
| Fire-and-forget | Eventâ€™in yayÄ±nlandÄ±ktan sonra sonuÃ§ dÃ¶ndÃ¼rmeden Ã§alÄ±ÅŸmasÄ±.                             |
| IEventMediator  | Eventâ€™leri dispatch etmek ve publish etmek iÃ§in kullanÄ±lan arayÃ¼z.                     |
| POCO            | Plain Old C# Object â€” domain katmanÄ±nda Ergosfare baÄŸÄ±mlÄ±lÄ±ÄŸÄ± olmayan basit C# sÄ±nÄ±fÄ±. |
| POJO            | Plain Old Java Object â€” domain katmanÄ±nda baÄŸÄ±mlÄ±lÄ±k olmayan basit Java sÄ±nÄ±fÄ±.        |

